# antigen

source $HOME/.antigen/antigen.zsh

antigen use oh-my-zsh

# load plug-ins

antigen bundles <<EOBUNDLES
    git
    gitfast
    command-not-found
    colored-man-pages
    pyenv 
    python
    wd
    sudo
    npm
    gem
    rbenv
    bundler
    pipenv 
    vscode
    pip
    docker
    docker-compose
    docker-machine 
    yarn
    kubectl
    kubeadm
    lxd
    systemd
    virtualbox
    extract
    fzf
    systemadmin
    universalarchive
EOBUNDLES

antigen bundles <<EOBUNDLES
    zsh-users/zsh-syntax-highlighting
    zsh-users/zsh-completions
    bilelmoussaoui/flatpak-zsh-completion
    dominik-schwabe/zsh-fnm
    endaaman/lxd-completion-zsh
EOBUNDLES

antigen apply

# load starship

eval "$(starship init zsh)"

# environment configuration

## configure syntax highlighting

ZSH_HIGHLIGHT_STYLES[path]=none
ZSH_HIGHLIGHT_STYLES[path_prefix]=none
ZSH_HIGHLIGHT_STYLES[precommand]=fg=green
ZSH_HIGHLIGHT_STYLES[autodirectory]=fg=green
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

## load rbenv (as configured with rbenv installer)
export PATH=$HOME/.rbenv/bin:$PATH
eval "$(rbenv init -)"

## load pyenv (as configured with pyenv installer)
export PATH=$HOME/.pyenv/bin:$PATH
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

## enable Android platform tools (use the tools bundled with the SDK rather than the OS)
export PATH="$HOME/.local/share/Android/Sdk/platform-tools:$PATH"

## add ~/.local/bin to PATH (user installed binaries)
export PATH=$HOME/.local/bin:$PATH

## add ~/.cargo/bin to PATH (user-scope rust binary install)
export PATH=$HOME/.cargo/bin:$PATH

# application aliases
alias sml="rlwrap sml"
alias netcat="rlwrap netcat"

# ssh aliases

# dropbox aliases
alias dbi="attr -s com.dropbox.ignored -V 1"
alias dbu"attr -r com.dropbox.ignored"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/alastair/.local/share/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/alastair/.local/share/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/alastair/.local/share/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/alastair/.local/share/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/alastair/.local/share/google-cloud-sdk/path.zsh.inc' ]; then . '/home/alastair/.local/share/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/alastair/.local/share/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/alastair/.local/share/google-cloud-sdk/completion.zsh.inc'; fi

# shims

## fix issues with errors from systemd oh-my-zsh plugin
_systemctl_unit_state() {
  typeset -gA _sys_unit_state
  _sys_unit_state=( $(__systemctl list-unit-files "$PREFIX*" | awk '{print $1, $2}') ) }
 
# multipass completions (this uses bashcompinit to allow loading bash completions in zsh)
autoload compinit && compinit
autoload bashcompinit && bashcompinit
source $HOME/.bash_completion.d/multipass
